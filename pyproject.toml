[tool.poetry]
name = "brainsoft-code-challenge"
version = "0.0.1"
description = ""
authors = ["Vojtech Cahlik <vojtech@cahlik.net>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
requests = "^2.31.0"
pytest = "^8.0.2"
langchain = "^0.1.10"
langchain-openai = "^0.0.8"
streamlit = "^1.31.1"
chromadb = "^0.4.24"
rich = "^13.7.1"
prompt-toolkit = "^3.0.43"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 160
target-version = ['py311']
include = '\.pyi?$'

[tool.ruff]
# Exclude ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

line-length = 160
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors (indent, whitespace etc.)
    "W", # pycodestyle warnings (indent, whitespace etc.)
    "F", # Pyflakes errors
    "C4", # list and dictonary comprehensions, literals
    "B", # Bugbear - logical errors and designs
    "UP", # Pyupgrade - checks for newer versions
    "N", # PEP8 variable naming conventions
    "Q", # double/single quote check
    "RET", # optimize code around returns
    "SIM", # simplify code
    "ARG", # unused arguments
    "PL", # Pylint - magic values, correct usage
    "PERF", # list and dictionary operations
    "S", # security errors
    "I" # Isort for sorting imports
    # "ANN", # Checks annotations (typing)
    # "NPY", # Numpy errors
    # "PD", # Pandas errors
]

ignore = ["ANN204", "ANN101", "PLR09", "F405", "F403"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.flake8-annotations]
ignore-fully-untyped = true
suppress-none-returning = true
